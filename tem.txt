void PRINTFC(char* tx)
{
	int len = strlen(tx);
	while(len)
	{
		while(!(USART1->SR&0X40));//等待傳送完成
		USART1->DR = *tx;
		tx++;
		len--;
	}
}
void PRINTFI(uint32_t tx)
{
	if(tx/10!=0) PRINTFI(tx/10);
	while(!(USART1 -> SR&0X40));//等待傳送完成
	USART1 -> DR = (tx%10)+'0';
}
void clock_init(void)
{
	RCC -> CR |= (1<<16);
	while(!(RCC->CR & 0X20000));
	FLASH -> ACR |= (1<<8);//prefetch enable
	FLASH -> ACR |= (0x1);
	RCC -> PLLCFGR &= ~(0x7fff);
	RCC -> PLLCFGR |= (1<<22);
	RCC -> PLLCFGR |= (0x5a<<6);
	RCC -> PLLCFGR |= (0x4);
	RCC -> CFGR |= (0x4<<10);
	RCC -> CR |= (1<<24);
	while(!(RCC->CR & 0X2000000));
	RCC -> CFGR |= (0X2);
}
RCC -> AHB1ENR |= (1);//GPIOA CLOCK
	//RCC -> AHB1ENR |= (1<<1);//GPIOB CLOCK
	//usart tx
	GPIOA -> MODER |= (0x2<<18);//alternate mode
	GPIOA -> OSPEEDR |= (0x3<<18);//speed high
	GPIOA -> AFR[1] |= (0X7<<4);//alternative function
void usart_init(void)
{
	RCC->APB2ENR |= (1<<4);//clock
	USART1 -> BRR = (0x61<<4 | 0);//USART的頻率設置
	//設定,enable
	USART1 -> CR1 |= (1<<15);
	USART1 -> CR1 |= (1<<5);
	USART1 -> CR1 |= (1<<3);
	USART1 -> CR1 |= (1<<2);
	USART1 -> CR1 |= (1<<13);
}
